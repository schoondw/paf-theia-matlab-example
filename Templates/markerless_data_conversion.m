% Script for conversion of Theia skeleton data to QTM MAT/TSV
% Input:
% - session.xml file (created when processing Theia)
%
% Output (in session folder):
% - QTM Matlab format file (<trial>_theia poses.mat) containing Theia poses as Skeleton data (one file per trial)
% - QTM TSV skeleton format file(s) (<trial>_s_pose_filt_*.tsv, one per pose)
% - Excel file skeleton_export_info.xlsx containing information about the
%   trials and skeletons

%% Script parameters
template_path = '<?=$template_directory;?>';
working_path='<?=$working_directory;?>';

Opts = struct(...
    'theia_output_folder',fullfile(working_path,'TheiaFormatData'),...
    'qtm_data_path',working_path,... % Current PAF working directory
    'qtm_format_output_suffix', '_theia_pose',... % Suffix appended to trial file name for the converted output
    'admin_file', 'skeleton_export_info.xlsx',...
    'trial_sheet', 'trials',...
    'trialVarDef', {{... % Variables for trial admin - DO NOT EDIT % 'subject_folder','string';... 'session_folder','string';...
        'theia_data_path','string';...
        'qtm_data_path','string';...
        'qtm_format_output_path','string';...
        'trial','string';...
        'trial_output_name','string';...
        'n_skel','double';...
        'processing_date','string'}},...
    'max_trials', 1000,...
    'write_skeleton_info',true,...
    'skeleton_info_sheet', 'skeleton_info',...
    'skelVarDef',{{... % Additional variables for skeleton admin (added to trial admin variables) - DO NOT EDIT
        'theia_version','string';...
        'skel_id','string';...
        'model','string';...
        'n_frames','double';...
        'frame_rate','double';...
        'n_segments','double';...
        'fill_level_av','double';...
        'fill_level_sd','double';...
        'fill_level_min','double';...
        'fill_level_max','double'}},...
    'theia_pose_base', 'pose_filt',...
    'rot_suffix', '_4X4',...
    'ignore_segments', {{'worldbody'}},... % List of rotation segments to ignore (without rot_suffix)
    'default_model', 'standard',...
    'animation_model', 'animation',...
    'animation_model_segments', {{'abdomen','thorax','neck'}},...
    'meta_sheet', 'trial_metadata',...
    'metaVarDef', {{...
        'n_videocams','doublenan';...
        'n_videoframes','doublenan';...
        'videoframe_rate','doublenan';...
        'video_width','doublenan';...
        'video_height','doublenan';...
        'n_megapix','doublenan';...
        'flag_unequal_no_frames','logical';...
        'flag_unequal_frame_rates','logical';...
        'flag_unequal_video_resolutions','logical';...
        'start_theia_processing','string';...
        'end_theia_processing','string';...
        'theia_processing_time','doublenan';...
        'theia_processing_fps','doublenan'}},...
    'verbose', true);

%% Check/set Matlab path
addpath(genpath(fullfile(template_path,'Assets','Matlab')),'-end')

if exist('QTMTools','file') ~= 2
    disp('QTMTools should be installed and added to the Matlab path.')
    return
end

%% Project admin
% Create_project_admin

% Session file list
metaData = xml2struct('session.xml');

% Create copy substructure containing measurement data
meta_meas=metaData.Subject.Session.Measurement; % Structure levels dependent on PAF data hierarchy
if ~iscell(meta_meas) % Convert to cell if only one trial is present
    meta_meas = {meta_meas};
end
N_Mmts=length(meta_meas);

% Extract information about measurements
trial_list=cell(1,N_Mmts);
trial_type=cell(1,N_Mmts);
trial_used=false(1,N_Mmts); 
for i1=1:N_Mmts
    trial_list{i1}=meta_meas{i1}.Attributes.Filename(1:end-4); % Without .qtm extension
    trial_type{i1}=meta_meas{i1}.Attributes.Type;
    if strcmp(meta_meas{i1}.Fields.Used.Text,'True'), trial_used(i1)=true; end
end

Create_project_admin_PAF(trial_list(trial_used),Opts);

%% Convert Theia pose C3D files to QTM skeleton representation (QTM .mat export format)
C3D_to_QTM_mat(Opts);

%% Convert QTM mat to QTM TSV skeletons (QTM .tsv skeleton format)
QTM_mat_to_tsv(Opts);

%% Save Matlab options
save(fullfile(working_path,'script_options.mat'),'Opts');

%% Close Matlab
disp('Quitting Matlab')

pause(2);
quit
